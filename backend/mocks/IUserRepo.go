// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	model "describe.me/app/model"
	mock "github.com/stretchr/testify/mock"
)

// IUserRepo is an autogenerated mock type for the IUserRepo type
type IUserRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: data
func (_m *IUserRepo) Create(data *model.User) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.User) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TakeByRatingMoreThan provides a mock function with given fields: rating
func (_m *IUserRepo) TakeByRatingMoreThan(rating int) (*[]model.User, error) {
	ret := _m.Called(rating)

	var r0 *[]model.User
	if rf, ok := ret.Get(0).(func(int) *[]model.User); ok {
		r0 = rf(rating)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]model.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(rating)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TakeOneById provides a mock function with given fields: id
func (_m *IUserRepo) TakeOneById(id uint) (*model.User, error) {
	ret := _m.Called(id)

	var r0 *model.User
	if rf, ok := ret.Get(0).(func(uint) *model.User); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
